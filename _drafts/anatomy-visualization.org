#+BEGIN_HTML
---
layout:     post
title:      Anatomy visualization
categories: medicine visualization gource postgresql
---
#+END_HTML

#+BEGIN_SRC sh :results file :exports none
cd ~/Code/anatomy
DATABASE_URL="$(heroku config:get DATABASE_URL)"
FILE_PATH="/tmp/database_url_$(echo $DATABASE_URL | shasum -a 256).secret"
echo $DATABASE_URL > "$FILE_PATH"
echo "$FILE_PATH"
#+END_SRC

#+NAME: database-credentials-path
#+RESULTS:
[[file:/tmp/database_url_7536247dd915fdca1746327350e18b41b7345c9f8a041f1688dc25722a836cab  -.secret]]

#+NAME: database-url
#+HEADER: :exports none
#+BEGIN_SRC sh :var DB_CRED_PATH=database-credentials-path :results silent
cat "$DB_CRED_PATH"
#+END_SRC

#+NAME: exam-date
: 2015-09-21 08:30:00 +02:00

Deze is opgesplitst per whitespace in de structuurnaam

#+NAME: answers-query
#+BEGIN_EXAMPLE sql
WITH
  ranked_sessions AS (
    SELECT
      session_id,
      rank() OVER (ORDER BY min(created_at)) session_rank
    FROM answers
    WHERE session_id IS NOT NULL
      AND created_at
        BETWEEN timestamp :exam_date - interval '28 hours'
        AND :exam_date
    GROUP BY session_id
  ),
  plate_numbers AS (
    SELECT
      id,
      category_id,
      rank() OVER (PARTITION BY category_id ORDER BY plates.id)
    FROM plates
  )

SELECT
  round(extract(epoch from answers.created_at)),
  session_rank,
  CASE
    WHEN similarity(answers.input, structures.name) = 1 THEN 'A'
    WHEN similarity(answers.input, structures.name) >= 0.8 THEN 'M'
    ELSE 'M'
  END,
  categories.name || '/' || plate_numbers.rank || '/' || structure_id || '/' || rank() OVER (ORDER BY answers.id) || ': ' || input,
  CASE
    WHEN similarity(answers.input, structures.name) = 1 THEN '00FF00'
    WHEN similarity(answers.input, structures.name) >= 0.5 THEN 'FFFF00'
    ELSE 'FF0000'
  END
FROM answers
JOIN structures ON structures.id = structure_id
JOIN plate_numbers ON plate_numbers.id = plate_id
JOIN categories ON categories.id = category_id
JOIN ranked_sessions rs ON rs.session_id = answers.session_id
WHERE answers.created_at
  BETWEEN timestamp :exam_date - interval '28 hours'
  AND :exam_date
ORDER BY answers
#+END_EXAMPLE

#+HEADER: :var DATABASE_URL=database-url
#+HEADER: :var EXAM_DATE=exam-date
#+HEADER: :var ANSWERS_QUERY=answers-query
#+HEADER: :results file
#+BEGIN_SRC sh :exports none
OUTPUT_FILE="$(mktemp -t anatomy)"
echo $ANSWERS_QUERY | psql $DATABASE_URL \
                           --no-align \
                           --tuples-only \
                           --set exam_date="'$EXAM_DATE'" \
                           --output $OUTPUT_FILE \
                           2>&1

DEST_PATH="/tmp/answers_$(md5 -q $OUTPUT_FILE).log"
mv $OUTPUT_FILE $DEST_PATH
echo $DEST_PATH
#+END_SRC

#+NAME: answers-path
#+RESULTS:
[[file:/tmp/answers_f0b7aad00ac0d385ee980d3fba1eb78f.log]]

#+BEGIN_SRC sh :var ANSWERS_PATH=answers-path :results output
head -n 3 $ANSWERS_PATH
#+END_SRC

#+RESULTS:
: 1442729360|1|A|Kniegewricht/1/617/1: meniscus medialis|00FF00
: 1442729371|1|A|Kniegewricht/1/616/2: lig. cruciatum posterior|00FF00
: 1442729377|1|A|Kniegewricht/1/618/3: meniscus lateralis|00FF00

#+BEGIN_SRC sh :var ANSWERS_PATH=answers-path :results output :exports both
wc -l < $ANSWERS_PATH
#+END_SRC

#+RESULTS:
:    50851

#+HEADER: :results file
#+HEADER: :var exam_date=exam-date
#+BEGIN_SRC ruby :exports none
require 'date'
date = DateTime.parse(exam_date).to_time
captions = 40.times.map do |i|
  adj_time = date - (60 * 60) * i

  if i == 0
    "#{adj_time.to_i}|Exam begins..."
  else
    "#{adj_time.to_i}|#{i} hour#{'s' if i != 1} until exam" # (#{adj_time})"
  end
end

body = captions.reverse.join("\n")
require 'digest'
md5digest = Digest::MD5.new.update body
path = "/tmp/captions_#{md5digest}.log"
open(path, 'w') do |file|
  file.write body
end
path
#+END_SRC

#+NAME: captions-path
#+RESULTS:
[[file:/tmp/captions_2d494c2d530f8ea4eb2390406b78409f.log]]

#+BEGIN_SRC sh :var CAPTIONS_PATH=captions-path :results output
tail -n 3 $CAPTIONS_PATH
#+END_SRC

#+RESULTS:
: 1442809800|2 hours until exam
: 1442813400|1 hour until exam
: 1442817000|Exam begins...

#+NAME: sessions-query
#+BEGIN_EXAMPLE sql
SELECT
  rank() OVER (ORDER BY min(created_at)) session_rank,
  user_agent,
  min(id) first_id,
  min(created_at) session_start
FROM answers
WHERE session_id IS NOT NULL
AND answers.created_at
  BETWEEN timestamp :exam_date - interval '28 hours'
  AND :exam_date
GROUP BY session_id, user_agent
#+END_EXAMPLE

#+HEADER: :var DATABASE_URL=database-url
#+HEADER: :var EXAM_DATE=exam-date
#+HEADER: :var SESSIONS_QUERY=sessions-query
#+HEADER: :results file
#+BEGIN_SRC sh :exports none
OUTPUT_FILE="$(mktemp -t sessions)"
echo "$SESSIONS_QUERY" | psql $DATABASE_URL \
                              --no-align \
                              --tuples-only \
                              --set exam_date="'$EXAM_DATE'" \
                              --output $OUTPUT_FILE \
                              2>&1

DEST_PATH="/tmp/sessions_$(md5 -q $OUTPUT_FILE).log"
mv $OUTPUT_FILE $DEST_PATH
echo $DEST_PATH
#+END_SRC

#+NAME: sessions-path
#+RESULTS:
[[file:/tmp/sessions_9e1c409c8673a62837be2c6e1a5c84a6.log]]

#+BEGIN_SRC sh :var SESSIONS_PATH=sessions-path :results output
head -n 3 $SESSIONS_PATH
#+END_SRC

#+RESULTS:
: 1|Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/600.7.12 (KHTML, like Gecko) Version/8.0.7 Safari/600.7.12|1465360|2015-09-20 06:09:19.603637
: 2|Mozilla/5.0 (Windows NT 10.0; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0|1465384|2015-09-20 06:19:55.221907
: 3|Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/600.8.9 (KHTML, like Gecko) Version/8.0.8 Safari/600.8.9|1465408|2015-09-20 06:28:14.890441

#+BEGIN_SRC ruby :var sessions_path=sessions-path :exports none
require 'fileutils'
require 'digest'
md5digest = Digest::MD5.file sessions_path
user_images_path = "/tmp/user_images_#{md5digest}"
FileUtils.rm_rf user_images_path
FileUtils.mkdir user_images_path

require 'csv'
require 'browser'
headers = %i(session_rank user_agent first_id session_start)
cache = {}
data = CSV.foreach(sessions_path, col_sep: '|', headers: headers) do |row|
  browser = (cache[row[:user_agent]] ||= Browser.new(ua: row[:user_agent]).name)
  next unless %w(Safari Chrome Firefox).include?(browser)
  FileUtils.ln_s "/Users/pepijn/Desktop/browser_icons/#{browser}.png", "#{user_images_path}/#{row[:session_rank]}.png"
end
user_images_path
#+END_SRC

#+NAME: user-images-path
#+RESULTS:
: /tmp/user_images_9e1c409c8673a62837be2c6e1a5c84a6

#+BEGIN_SRC sh :var USER_IMAGES_PATH=user-images-path :results output
ls -l $USER_IMAGES_PATH/{1,2,3}.png | cut -d/ -f4-
#+END_SRC

#+RESULTS:
: 1.png -> /Users/pepijn/Desktop/browser_icons/Safari.png
: 2.png -> /Users/pepijn/Desktop/browser_icons/Firefox.png
: 3.png -> /Users/pepijn/Desktop/browser_icons/Safari.png

#+HEADER: :var ANSWERS_PATH=answers-path
#+HEADER: :var CAPTIONS_PATH=captions-path
#+HEADER: :var USER_IMAGES_PATH=user-images-path
#+BEGIN_SRC sh :results verbatim silent
time (gource \
          --caption-file $CAPTIONS_PATH \
          --caption-size 30 \
          --file-idle-time 5 \
          --fullscreen \
          --highlight-dirs \
          --dir-name-depth 1 \
          --max-file-lag -1 \
          --seconds-per-day 1000 \
          --stop-at-end \
          --title 'AMC/UvA 3rd year medical students revising for their orthopaedics course (3.1) anatomy exam (Monday September 21, 08:30)' \
          --user-image-dir $USER_IMAGES_PATH \
          $ANSWERS_PATH 2>/dev/null) \
     2>&1
#+END_SRC
